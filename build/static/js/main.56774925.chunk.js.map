{"version":3,"sources":["components/MoviesContainer.js","stores/reducers/moviesReducer.js","stores/reducers/actorsReducer.js","stores/Store.js","stores/actions/movieActions.js","components/MoviesForm.js","components/App.js","index.js"],"names":["MoviesContainer","this","props","filmiki","list","map","movie","Component","connect","state","movies","initialMovies","moviesReducer","action","type","item","initialActors","actorsReducer","rootReducer","combineReducers","actors","composerEnhancer","composeWithDevTools","trace","traceLimit","rootStore","createStore","applyMiddleware","thunk","moviesActions","bindActionCreators","add","reset","dispatch","MoviesForm","changeValue","e","setState","value","target","handleAdd","preventDefault","resetList","onSubmit","onChange","onClick","App","className","ReactDOM","render","store","document","getElementById"],"mappings":"yRAGMA,G,uLAEE,OACA,4BACKC,KAAKC,MAAMC,QAAQC,KAAKC,KAAI,SAAAC,GAAK,OAAG,4BAAKA,W,GAJxBC,cAcfC,eAJS,SAAAC,GAAK,MAAI,CAC7BN,QAASM,EAAMC,UAGJF,CAAyBR,G,wlBCjBxC,IAAMW,EAAgB,CACpBP,KAAM,CAAE,QAAS,WAmBFQ,MAhBjB,WAAsD,IAA/BH,EAA8B,uDAAtBE,EAAeE,EAAO,uCACjD,OAAOA,EAAOC,MACZ,IAAK,YACL,OAAO,EAAP,GACKL,EADL,CACYL,KAAK,GAAD,mBAAMK,EAAML,MAAZ,CAAkBS,EAAOE,SAGzC,IAAK,eACL,OAAO,EAAP,GACKN,EADL,CACYL,KAAM,KAGlB,QAAS,OAAOK,I,yjBChBtB,IAAMO,EAAgB,CACpBZ,KAAM,CAAE,gBAAiB,cAmBTa,MAhBlB,WAAsD,IAA/BR,EAA8B,uDAAtBO,EAAeH,EAAO,uCACjD,OAAOA,EAAOC,MACZ,IAAK,YACL,OAAO,KACFL,EADL,CACYL,KAAK,GAAD,mBAAMK,EAAML,MAAZ,CAAkBS,EAAOE,SAGzC,IAAK,eACL,OAAO,KACFN,EADL,CACYL,KAAM,KAGlB,QAAS,OAAOK,I,QCThBS,EAAcC,0BAAgB,CAChCT,OAAQE,EACRQ,OAAQH,IAGNI,EAAmBC,8BAAoB,CACzCC,OAAO,EACPC,WAAY,KAQDC,EALGC,sBACdR,EACAG,EAAiBM,0BAAgBC,OCXtBC,EAFOC,6BAAmB,CAACC,IAHzB,SAAAhB,GAAI,MAAK,CAACD,KAAM,YAAaC,SAGWiB,MAFrC,iBAAO,CAAClB,KAAM,kBAE4CW,EAAUQ,UCFlFC,E,YAEF,WAAYhC,GAAO,IAAD,8BACd,4CAAMA,KAOViC,YAAc,SAACC,GACX,EAAKC,SAAS,CAACC,MAAOF,EAAEG,OAAOD,SATjB,EAYlBE,UAAY,SAACJ,GACTA,EAAEK,iBACF,EAAKvC,MAAM6B,IAAI,EAAKtB,MAAM6B,QAdZ,EAgBlBI,UAAY,WACR,EAAKxC,MAAM8B,SAdX,EAAKvB,MAAQ,CACT6B,MAAM,IAJI,E,sEAqBd,OACI,0BAAMK,SAAW1C,KAAKuC,WAClB,2BAAO1B,KAAK,OAAOwB,MAAOrC,KAAKQ,MAAM6B,MAAOM,SAAU3C,KAAKkC,cAC3D,4BAAQrB,KAAK,UAAb,aAAwC,4BAAQA,KAAK,SAAS+B,QAAS5C,KAAKyC,WAApC,c,GA1B/BnC,aAqCVC,cAAQ,MALI,SAAAyB,GAAQ,MAAI,CACnCF,IAAK,SAACzB,GAAD,OAAS2B,EAASJ,EAAcE,IAAIzB,KACzC0B,MAAO,kBAAMC,EAASJ,EAAcG,aAGzBxB,CAAkC0B,GCzBlCY,E,iLATX,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALUxC,aCElByC,IAASC,OACT,kBAAC,IAAD,CAAUC,MAAQzB,GACd,kBAAC,EAAD,OAEH0B,SAASC,eAAe,W","file":"static/js/main.56774925.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass MoviesContainer extends Component{\r\n    render(){\r\n        return(\r\n        <ul>\r\n            {this.props.filmiki.list.map(movie=> <li>{movie}</li>)}\r\n        </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    filmiki: state.movies\r\n})\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer)","const initialMovies = {\r\n  list: [ 'Rambo', 'Matrix']\r\n}\r\n\r\nfunction moviesReducer(state = initialMovies, action){\r\n    switch(action.type){\r\n      case 'ADD_MOVIE':\r\n      return {\r\n        ...state, list: [...state.list, action.item]\r\n      };\r\n      \r\n      case 'RESET_MOVIES': \r\n      return {\r\n        ...state, list: []\r\n      };      \r\n      \r\n      default: return state;\r\n    }\r\n  }\r\n  \r\n  export default moviesReducer; ","const initialActors = {\r\n  list: [ 'Julia Roberts', 'Tom Hanks']\r\n}\r\n\r\nfunction actorsReducer(state = initialActors, action){\r\n    switch(action.type){\r\n      case 'ADD_ACTOR':\r\n      return {\r\n        ...state, list: [...state.list, action.item]\r\n      };\r\n      \r\n      case 'RESET_ACTORS': \r\n      return {\r\n        ...state, list: []\r\n      };      \r\n      \r\n      default: return state;\r\n    }\r\n  }\r\n  \r\n   export default actorsReducer; ","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport moviesReducer from './reducers/moviesReducer'\r\nimport actorsReducer from './reducers/actorsReducer'\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    movies: moviesReducer,\r\n    actors: actorsReducer\r\n})\r\n\r\nconst composerEnhancer = composeWithDevTools({\r\n    trace: true,\r\n    traceLimit: 25\r\n});\r\n\r\nconst rootStore = createStore(\r\n    rootReducer, \r\n    composerEnhancer(applyMiddleware(thunk))\r\n    )\r\n\r\nexport default rootStore","import { bindActionCreators } from \"redux\"\r\nimport rootStore from '../Store'\r\n\r\nconst addMovie = item => ({type: 'ADD_MOVIE', item})\r\nconst resetMovies = () => ({type: 'RESET_MOVIES'})\r\n\r\nconst moviesActions = bindActionCreators({add: addMovie, reset: resetMovies}, rootStore.dispatch)\r\n\r\nexport default moviesActions","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport moviesActions from '../stores/actions/movieActions'\r\n\r\nclass MoviesForm extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            value:''\r\n        }\r\n    }\r\n\r\n    changeValue = (e) => {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    handleAdd = (e) => {\r\n        e.preventDefault();\r\n        this.props.add(this.state.value);\r\n    }\r\n    resetList = () =>{\r\n        this.props.reset()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form onSubmit={ this.handleAdd }>\r\n                <input type=\"Text\" value={this.state.value} onChange={this.changeValue}/>\r\n                <button type='submit'>Add movie</button><button type='button' onClick={this.resetList}>Clear</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    add: (movie)=>dispatch(moviesActions.add(movie)),\r\n    reset: () => dispatch(moviesActions.reset())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(MoviesForm)","import React, {Component} from 'react';\nimport './App.css';\nimport MoviesContainer from './MoviesContainer'\nimport MoviesForm from './MoviesForm'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MoviesContainer/>\n        <MoviesForm/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './components/App';\nimport rootStore from './stores/Store'\n\nReactDOM.render(\n<Provider store={ rootStore }>\n    <App />\n</Provider>\n,document.getElementById('root')\n);"],"sourceRoot":""}